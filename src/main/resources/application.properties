#spring.main.banner-mode=off
some.prop=aabbcc
#spring.jms.jndi-name=java:/MQ_JMS_MANAGER

#spring.datasource.url=jdbc:mysql://localhost/test?createDatabaseIfNotExist=true
#spring.datasource.username=admin
#spring.datasource.password=admin
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver

# Show or not log for each sql query
#spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
#spring.jpa.hibernate.ddl-auto = create

# Allows Hibernate to generate SQL optimized for a particular DBMS
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# When using JTA use the org.springframework.orm.hibernate4.SpringJtaSessionContext instead
#spring.jpa.properties.hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext

# Spring Boot however defaults this property to false, which means the old generator will be used, unless you explicitly tell it you want the new one.
#spring.jpa.hibernate.use-new-id-generator-mappings=true

logging.level.org.springframework.transaction.interceptor=TRACE

# Database
db.driver: com.mysql.jdbc.Driver
db.url: jdbc:mysql://localhost/test?createDatabaseIfNotExist=true
db.username: admin
db.password: admin

#Hibernate
hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
hibernate.show_sql: true
hibernate.hbm2ddl.auto: create
entitymanager.packagesToScan: hello